import Head from 'next/head';
import Link from 'next/link';
import Layout from '../components/Layout';
import styles from '../styles/Home.module.css';
import { getBlogPosts } from '../util/database';

export default function BlogPostList(props) {
  return (
    <Layout userObject={props.userObject}>
      <div className={styles.container}>
        <Head>
          <title>Student Platform</title>
          <meta name="description" content="Generated by create next app" />
        </Head>

        <main className={styles.grid}>
          {props.blogPosts.map((blogPost) => {
            return (
              <div key={`blogPost-${blogPost.id}`}>
                <div className={styles.grid}>
                  {/* Dynamic link, eg. /products/1, /products/2, etc */}
                  <Link href={`/blogPosts/${blogPost.id}`}>
                    <a className={styles.card}>
                      {blogPost.title}
                      {/* <Image
                        src={`/unfortunately-foxes/${product.id}.png`}
                        width="200"
                        height="200"
                      /> */}
                    </a>
                  </Link>{' '}
                </div>
              </div>
            );
          })}
        </main>
      </div>
    </Layout>
  );
}

// Code in getServerSideProps runs only in
// Node.js, and allows you to do fancy things:
// - Read files from the file system
// - Connect to a (real) database
//
// getServerSideProps is exported from your files
// (ONLY FILES IN /pages) and gets imported
// by Next.js
export async function getServerSideProps() {
  const blogPosts = await getBlogPosts();

  console.log('db', blogPosts);

  // if there is no addedProducts cookie on the browser we store to an [] otherwise we get the cookie value and parse it

  // Important:
  // - Always return an object from getServerSideProps
  // - Always return a key in that object that is
  // called props

  // 1. get the cookies from the browser
  // 2. pass the cookies to the frontend
  return {
    props: {
      // In the props object, you can pass back
      // whatever information you want

      blogPosts,
    },
  };
}
